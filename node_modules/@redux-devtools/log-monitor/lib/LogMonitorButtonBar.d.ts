import { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { LiftedAction } from '@redux-devtools/core';
import { Base16Theme } from 'redux-devtools-themes';
import { Action, Dispatch } from 'redux';
import { LogMonitorAction } from './actions';
import { LogMonitorState } from './reducers';
interface Props<S, A extends Action<unknown>> {
    theme: Base16Theme;
    dispatch: Dispatch<LogMonitorAction | LiftedAction<S, A, LogMonitorState>>;
    hasStates: boolean;
    hasSkippedActions: boolean;
}
export default class LogMonitorButtonBar<S, A extends Action<unknown>> extends PureComponent<Props<S, A>> {
    static propTypes: {
        dispatch: PropTypes.Requireable<(...args: any[]) => any>;
        theme: PropTypes.Requireable<object>;
    };
    handleRollback: () => void;
    handleSweep: () => void;
    handleCommit: () => void;
    handleReset: () => void;
    render(): JSX.Element;
}
export {};
