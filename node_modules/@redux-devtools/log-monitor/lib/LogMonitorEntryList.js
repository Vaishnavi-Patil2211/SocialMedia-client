"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _LogMonitorEntry = _interopRequireDefault(require("./LogMonitorEntry"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var LogMonitorEntryList = /*#__PURE__*/function (_PureComponent) {
  _inherits(LogMonitorEntryList, _PureComponent);

  var _super = _createSuper(LogMonitorEntryList);

  function LogMonitorEntryList() {
    _classCallCheck(this, LogMonitorEntryList);

    return _super.apply(this, arguments);
  }

  _createClass(LogMonitorEntryList, [{
    key: "render",
    value: function render() {
      var elements = [];
      var _this$props = this.props,
          theme = _this$props.theme,
          actionsById = _this$props.actionsById,
          computedStates = _this$props.computedStates,
          currentStateIndex = _this$props.currentStateIndex,
          consecutiveToggleStartId = _this$props.consecutiveToggleStartId,
          select = _this$props.select,
          skippedActionIds = _this$props.skippedActionIds,
          stagedActionIds = _this$props.stagedActionIds,
          expandActionRoot = _this$props.expandActionRoot,
          expandStateRoot = _this$props.expandStateRoot,
          markStateDiff = _this$props.markStateDiff,
          onActionClick = _this$props.onActionClick,
          onActionShiftClick = _this$props.onActionShiftClick;

      for (var i = 0; i < stagedActionIds.length; i++) {
        var _actionId = stagedActionIds[i];
        var action = actionsById[_actionId].action;
        var _computedStates$i = computedStates[i],
            _state = _computedStates$i.state,
            error = _computedStates$i.error;
        var previousState = void 0;

        if (i > 0) {
          previousState = computedStates[i - 1].state;
        }

        elements.push( /*#__PURE__*/_react["default"].createElement(_LogMonitorEntry["default"], {
          key: _actionId,
          theme: theme,
          select: select,
          action: action,
          actionId: _actionId,
          state: _state,
          previousState: previousState,
          collapsed: skippedActionIds.indexOf(_actionId) > -1,
          inFuture: i > currentStateIndex,
          selected: consecutiveToggleStartId === i,
          error: error,
          expandActionRoot: expandActionRoot,
          expandStateRoot: expandStateRoot,
          markStateDiff: markStateDiff,
          onActionClick: onActionClick,
          onActionShiftClick: onActionShiftClick
        }));
      }

      return /*#__PURE__*/_react["default"].createElement("div", null, elements);
    }
  }]);

  return LogMonitorEntryList;
}(_react.PureComponent);

exports["default"] = LogMonitorEntryList;

_defineProperty(LogMonitorEntryList, "propTypes", {
  actionsById: _propTypes["default"].object,
  computedStates: _propTypes["default"].array,
  stagedActionIds: _propTypes["default"].array,
  skippedActionIds: _propTypes["default"].array,
  currentStateIndex: _propTypes["default"].number,
  consecutiveToggleStartId: _propTypes["default"].number,
  select: _propTypes["default"].func.isRequired,
  onActionClick: _propTypes["default"].func.isRequired,
  theme: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].string]),
  expandActionRoot: _propTypes["default"].bool,
  expandStateRoot: _propTypes["default"].bool
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Mb2dNb25pdG9yRW50cnlMaXN0LnRzeCJdLCJuYW1lcyI6WyJMb2dNb25pdG9yRW50cnlMaXN0IiwiZWxlbWVudHMiLCJwcm9wcyIsInRoZW1lIiwiYWN0aW9uc0J5SWQiLCJjb21wdXRlZFN0YXRlcyIsImN1cnJlbnRTdGF0ZUluZGV4IiwiY29uc2VjdXRpdmVUb2dnbGVTdGFydElkIiwic2VsZWN0Iiwic2tpcHBlZEFjdGlvbklkcyIsInN0YWdlZEFjdGlvbklkcyIsImV4cGFuZEFjdGlvblJvb3QiLCJleHBhbmRTdGF0ZVJvb3QiLCJtYXJrU3RhdGVEaWZmIiwib25BY3Rpb25DbGljayIsIm9uQWN0aW9uU2hpZnRDbGljayIsImkiLCJsZW5ndGgiLCJhY3Rpb25JZCIsImFjdGlvbiIsInN0YXRlIiwiZXJyb3IiLCJwcmV2aW91c1N0YXRlIiwicHVzaCIsImluZGV4T2YiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwib2JqZWN0IiwiYXJyYXkiLCJudW1iZXIiLCJmdW5jIiwiaXNSZXF1aXJlZCIsIm9uZU9mVHlwZSIsInN0cmluZyIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQnFCQSxtQjs7Ozs7Ozs7Ozs7Ozs2QkFtQlY7QUFDUCxVQUFNQyxRQUFRLEdBQUcsRUFBakI7QUFETyx3QkFnQkgsS0FBS0MsS0FoQkY7QUFBQSxVQUdMQyxLQUhLLGVBR0xBLEtBSEs7QUFBQSxVQUlMQyxXQUpLLGVBSUxBLFdBSks7QUFBQSxVQUtMQyxjQUxLLGVBS0xBLGNBTEs7QUFBQSxVQU1MQyxpQkFOSyxlQU1MQSxpQkFOSztBQUFBLFVBT0xDLHdCQVBLLGVBT0xBLHdCQVBLO0FBQUEsVUFRTEMsTUFSSyxlQVFMQSxNQVJLO0FBQUEsVUFTTEMsZ0JBVEssZUFTTEEsZ0JBVEs7QUFBQSxVQVVMQyxlQVZLLGVBVUxBLGVBVks7QUFBQSxVQVdMQyxnQkFYSyxlQVdMQSxnQkFYSztBQUFBLFVBWUxDLGVBWkssZUFZTEEsZUFaSztBQUFBLFVBYUxDLGFBYkssZUFhTEEsYUFiSztBQUFBLFVBY0xDLGFBZEssZUFjTEEsYUFkSztBQUFBLFVBZUxDLGtCQWZLLGVBZUxBLGtCQWZLOztBQWtCUCxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdOLGVBQWUsQ0FBQ08sTUFBcEMsRUFBNENELENBQUMsRUFBN0MsRUFBaUQ7QUFDL0MsWUFBTUUsU0FBUSxHQUFHUixlQUFlLENBQUNNLENBQUQsQ0FBaEM7QUFDQSxZQUFNRyxNQUFNLEdBQUdmLFdBQVcsQ0FBQ2MsU0FBRCxDQUFYLENBQXNCQyxNQUFyQztBQUYrQyxnQ0FHdEJkLGNBQWMsQ0FBQ1csQ0FBRCxDQUhRO0FBQUEsWUFHdkNJLE1BSHVDLHFCQUd2Q0EsS0FIdUM7QUFBQSxZQUdoQ0MsS0FIZ0MscUJBR2hDQSxLQUhnQztBQUkvQyxZQUFJQyxhQUFhLFNBQWpCOztBQUNBLFlBQUlOLENBQUMsR0FBRyxDQUFSLEVBQVc7QUFDVE0sVUFBQUEsYUFBYSxHQUFHakIsY0FBYyxDQUFDVyxDQUFDLEdBQUcsQ0FBTCxDQUFkLENBQXNCSSxLQUF0QztBQUNEOztBQUNEbkIsUUFBQUEsUUFBUSxDQUFDc0IsSUFBVCxlQUNFLGdDQUFDLDJCQUFEO0FBQ0UsVUFBQSxHQUFHLEVBQUVMLFNBRFA7QUFFRSxVQUFBLEtBQUssRUFBRWYsS0FGVDtBQUdFLFVBQUEsTUFBTSxFQUFFSyxNQUhWO0FBSUUsVUFBQSxNQUFNLEVBQUVXLE1BSlY7QUFLRSxVQUFBLFFBQVEsRUFBRUQsU0FMWjtBQU1FLFVBQUEsS0FBSyxFQUFFRSxNQU5UO0FBT0UsVUFBQSxhQUFhLEVBQUVFLGFBUGpCO0FBUUUsVUFBQSxTQUFTLEVBQUViLGdCQUFnQixDQUFDZSxPQUFqQixDQUF5Qk4sU0FBekIsSUFBcUMsQ0FBQyxDQVJuRDtBQVNFLFVBQUEsUUFBUSxFQUFFRixDQUFDLEdBQUdWLGlCQVRoQjtBQVVFLFVBQUEsUUFBUSxFQUFFQyx3QkFBd0IsS0FBS1MsQ0FWekM7QUFXRSxVQUFBLEtBQUssRUFBRUssS0FYVDtBQVlFLFVBQUEsZ0JBQWdCLEVBQUVWLGdCQVpwQjtBQWFFLFVBQUEsZUFBZSxFQUFFQyxlQWJuQjtBQWNFLFVBQUEsYUFBYSxFQUFFQyxhQWRqQjtBQWVFLFVBQUEsYUFBYSxFQUFFQyxhQWZqQjtBQWdCRSxVQUFBLGtCQUFrQixFQUFFQztBQWhCdEIsVUFERjtBQW9CRDs7QUFFRCwwQkFBTyw2Q0FBTWQsUUFBTixDQUFQO0FBQ0Q7Ozs7RUFqRU93QixvQjs7OztnQkFIV3pCLG1CLGVBSUE7QUFDakJJLEVBQUFBLFdBQVcsRUFBRXNCLHNCQUFVQyxNQUROO0FBRWpCdEIsRUFBQUEsY0FBYyxFQUFFcUIsc0JBQVVFLEtBRlQ7QUFHakJsQixFQUFBQSxlQUFlLEVBQUVnQixzQkFBVUUsS0FIVjtBQUlqQm5CLEVBQUFBLGdCQUFnQixFQUFFaUIsc0JBQVVFLEtBSlg7QUFLakJ0QixFQUFBQSxpQkFBaUIsRUFBRW9CLHNCQUFVRyxNQUxaO0FBTWpCdEIsRUFBQUEsd0JBQXdCLEVBQUVtQixzQkFBVUcsTUFObkI7QUFRakJyQixFQUFBQSxNQUFNLEVBQUVrQixzQkFBVUksSUFBVixDQUFlQyxVQVJOO0FBU2pCakIsRUFBQUEsYUFBYSxFQUFFWSxzQkFBVUksSUFBVixDQUFlQyxVQVRiO0FBVWpCNUIsRUFBQUEsS0FBSyxFQUFFdUIsc0JBQVVNLFNBQVYsQ0FBb0IsQ0FBQ04sc0JBQVVDLE1BQVgsRUFBbUJELHNCQUFVTyxNQUE3QixDQUFwQixDQVZVO0FBV2pCdEIsRUFBQUEsZ0JBQWdCLEVBQUVlLHNCQUFVUSxJQVhYO0FBWWpCdEIsRUFBQUEsZUFBZSxFQUFFYyxzQkFBVVE7QUFaVixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0IHsgUGVyZm9ybUFjdGlvbiB9IGZyb20gJ0ByZWR1eC1kZXZ0b29scy9jb3JlJztcbmltcG9ydCB7IEJhc2UxNlRoZW1lIH0gZnJvbSAncmVkdXgtZGV2dG9vbHMtdGhlbWVzJztcbmltcG9ydCBMb2dNb25pdG9yRW50cnkgZnJvbSAnLi9Mb2dNb25pdG9yRW50cnknO1xuXG5pbnRlcmZhY2UgUHJvcHM8UywgQSBleHRlbmRzIEFjdGlvbjx1bmtub3duPj4ge1xuICBhY3Rpb25zQnlJZDogeyBbYWN0aW9uSWQ6IG51bWJlcl06IFBlcmZvcm1BY3Rpb248QT4gfTtcbiAgY29tcHV0ZWRTdGF0ZXM6IHsgc3RhdGU6IFM7IGVycm9yPzogc3RyaW5nIH1bXTtcbiAgc3RhZ2VkQWN0aW9uSWRzOiBudW1iZXJbXTtcbiAgc2tpcHBlZEFjdGlvbklkczogbnVtYmVyW107XG4gIGN1cnJlbnRTdGF0ZUluZGV4OiBudW1iZXI7XG4gIGNvbnNlY3V0aXZlVG9nZ2xlU3RhcnRJZDogbnVtYmVyIHwgbnVsbCB8IHVuZGVmaW5lZDtcblxuICBzZWxlY3Q6IChzdGF0ZTogUykgPT4gdW5rbm93bjtcbiAgb25BY3Rpb25DbGljazogKGlkOiBudW1iZXIpID0+IHZvaWQ7XG4gIHRoZW1lOiBCYXNlMTZUaGVtZTtcbiAgZXhwYW5kQWN0aW9uUm9vdDogYm9vbGVhbjtcbiAgZXhwYW5kU3RhdGVSb290OiBib29sZWFuO1xuICBtYXJrU3RhdGVEaWZmOiBib29sZWFuO1xuICBvbkFjdGlvblNoaWZ0Q2xpY2s6IChpZDogbnVtYmVyKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dNb25pdG9yRW50cnlMaXN0PFxuICBTLFxuICBBIGV4dGVuZHMgQWN0aW9uPHVua25vd24+XG4+IGV4dGVuZHMgUHVyZUNvbXBvbmVudDxQcm9wczxTLCBBPj4ge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGFjdGlvbnNCeUlkOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNvbXB1dGVkU3RhdGVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgc3RhZ2VkQWN0aW9uSWRzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgc2tpcHBlZEFjdGlvbklkczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGN1cnJlbnRTdGF0ZUluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNvbnNlY3V0aXZlVG9nZ2xlU3RhcnRJZDogUHJvcFR5cGVzLm51bWJlcixcblxuICAgIHNlbGVjdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBvbkFjdGlvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHRoZW1lOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gICAgZXhwYW5kQWN0aW9uUm9vdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZXhwYW5kU3RhdGVSb290OiBQcm9wVHlwZXMuYm9vbCxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgZWxlbWVudHMgPSBbXTtcbiAgICBjb25zdCB7XG4gICAgICB0aGVtZSxcbiAgICAgIGFjdGlvbnNCeUlkLFxuICAgICAgY29tcHV0ZWRTdGF0ZXMsXG4gICAgICBjdXJyZW50U3RhdGVJbmRleCxcbiAgICAgIGNvbnNlY3V0aXZlVG9nZ2xlU3RhcnRJZCxcbiAgICAgIHNlbGVjdCxcbiAgICAgIHNraXBwZWRBY3Rpb25JZHMsXG4gICAgICBzdGFnZWRBY3Rpb25JZHMsXG4gICAgICBleHBhbmRBY3Rpb25Sb290LFxuICAgICAgZXhwYW5kU3RhdGVSb290LFxuICAgICAgbWFya1N0YXRlRGlmZixcbiAgICAgIG9uQWN0aW9uQ2xpY2ssXG4gICAgICBvbkFjdGlvblNoaWZ0Q2xpY2ssXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0YWdlZEFjdGlvbklkcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgYWN0aW9uSWQgPSBzdGFnZWRBY3Rpb25JZHNbaV07XG4gICAgICBjb25zdCBhY3Rpb24gPSBhY3Rpb25zQnlJZFthY3Rpb25JZF0uYWN0aW9uO1xuICAgICAgY29uc3QgeyBzdGF0ZSwgZXJyb3IgfSA9IGNvbXB1dGVkU3RhdGVzW2ldO1xuICAgICAgbGV0IHByZXZpb3VzU3RhdGU7XG4gICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgcHJldmlvdXNTdGF0ZSA9IGNvbXB1dGVkU3RhdGVzW2kgLSAxXS5zdGF0ZTtcbiAgICAgIH1cbiAgICAgIGVsZW1lbnRzLnB1c2goXG4gICAgICAgIDxMb2dNb25pdG9yRW50cnlcbiAgICAgICAgICBrZXk9e2FjdGlvbklkfVxuICAgICAgICAgIHRoZW1lPXt0aGVtZX1cbiAgICAgICAgICBzZWxlY3Q9e3NlbGVjdH1cbiAgICAgICAgICBhY3Rpb249e2FjdGlvbn1cbiAgICAgICAgICBhY3Rpb25JZD17YWN0aW9uSWR9XG4gICAgICAgICAgc3RhdGU9e3N0YXRlfVxuICAgICAgICAgIHByZXZpb3VzU3RhdGU9e3ByZXZpb3VzU3RhdGV9XG4gICAgICAgICAgY29sbGFwc2VkPXtza2lwcGVkQWN0aW9uSWRzLmluZGV4T2YoYWN0aW9uSWQpID4gLTF9XG4gICAgICAgICAgaW5GdXR1cmU9e2kgPiBjdXJyZW50U3RhdGVJbmRleH1cbiAgICAgICAgICBzZWxlY3RlZD17Y29uc2VjdXRpdmVUb2dnbGVTdGFydElkID09PSBpfVxuICAgICAgICAgIGVycm9yPXtlcnJvcn1cbiAgICAgICAgICBleHBhbmRBY3Rpb25Sb290PXtleHBhbmRBY3Rpb25Sb290fVxuICAgICAgICAgIGV4cGFuZFN0YXRlUm9vdD17ZXhwYW5kU3RhdGVSb290fVxuICAgICAgICAgIG1hcmtTdGF0ZURpZmY9e21hcmtTdGF0ZURpZmZ9XG4gICAgICAgICAgb25BY3Rpb25DbGljaz17b25BY3Rpb25DbGlja31cbiAgICAgICAgICBvbkFjdGlvblNoaWZ0Q2xpY2s9e29uQWN0aW9uU2hpZnRDbGlja31cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIDxkaXY+e2VsZW1lbnRzfTwvZGl2PjtcbiAgfVxufVxuIl19