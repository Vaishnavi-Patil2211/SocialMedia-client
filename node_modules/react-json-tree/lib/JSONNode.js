"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _objType = _interopRequireDefault(require("./objType"));

var _JSONObjectNode = _interopRequireDefault(require("./JSONObjectNode"));

var _JSONArrayNode = _interopRequireDefault(require("./JSONArrayNode"));

var _JSONIterableNode = _interopRequireDefault(require("./JSONIterableNode"));

var _JSONValueNode = _interopRequireDefault(require("./JSONValueNode"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var JSONNode = function JSONNode(_ref) {
  var getItemString = _ref.getItemString,
      keyPath = _ref.keyPath,
      labelRenderer = _ref.labelRenderer,
      styling = _ref.styling,
      value = _ref.value,
      valueRenderer = _ref.valueRenderer,
      isCustomNode = _ref.isCustomNode,
      rest = _objectWithoutProperties(_ref, ["getItemString", "keyPath", "labelRenderer", "styling", "value", "valueRenderer", "isCustomNode"]);

  var nodeType = isCustomNode(value) ? 'Custom' : (0, _objType["default"])(value);
  var simpleNodeProps = {
    getItemString: getItemString,
    key: keyPath[0],
    keyPath: keyPath,
    labelRenderer: labelRenderer,
    nodeType: nodeType,
    styling: styling,
    value: value,
    valueRenderer: valueRenderer
  };

  var nestedNodeProps = _objectSpread(_objectSpread(_objectSpread({}, rest), simpleNodeProps), {}, {
    data: value,
    isCustomNode: isCustomNode
  });

  switch (nodeType) {
    case 'Object':
    case 'Error':
    case 'WeakMap':
    case 'WeakSet':
      return /*#__PURE__*/_react["default"].createElement(_JSONObjectNode["default"], nestedNodeProps);

    case 'Array':
      return /*#__PURE__*/_react["default"].createElement(_JSONArrayNode["default"], nestedNodeProps);

    case 'Iterable':
    case 'Map':
    case 'Set':
      return /*#__PURE__*/_react["default"].createElement(_JSONIterableNode["default"], nestedNodeProps);

    case 'String':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return "\"".concat(raw, "\"");
        }
      }));

    case 'Number':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], simpleNodeProps);

    case 'Boolean':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return raw ? 'true' : 'false';
        }
      }));

    case 'Date':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return raw.toISOString();
        }
      }));

    case 'Null':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter() {
          return 'null';
        }
      }));

    case 'Undefined':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter() {
          return 'undefined';
        }
      }));

    case 'Function':
    case 'Symbol':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return raw.toString();
        }
      }));

    case 'Custom':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], simpleNodeProps);

    default:
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter() {
          return "<".concat(nodeType, ">");
        }
      }));
  }
};

JSONNode.propTypes = {
  getItemString: _propTypes["default"].func.isRequired,
  keyPath: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]).isRequired).isRequired,
  labelRenderer: _propTypes["default"].func.isRequired,
  styling: _propTypes["default"].func.isRequired,
  value: _propTypes["default"].any,
  valueRenderer: _propTypes["default"].func.isRequired,
  isCustomNode: _propTypes["default"].func.isRequired
};
var _default = JSONNode;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9KU09OTm9kZS50c3giXSwibmFtZXMiOlsiSlNPTk5vZGUiLCJnZXRJdGVtU3RyaW5nIiwia2V5UGF0aCIsImxhYmVsUmVuZGVyZXIiLCJzdHlsaW5nIiwidmFsdWUiLCJ2YWx1ZVJlbmRlcmVyIiwiaXNDdXN0b21Ob2RlIiwicmVzdCIsIm5vZGVUeXBlIiwic2ltcGxlTm9kZVByb3BzIiwia2V5IiwibmVzdGVkTm9kZVByb3BzIiwiZGF0YSIsInJhdyIsInRvSVNPU3RyaW5nIiwidG9TdHJpbmciLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsImFycmF5T2YiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJudW1iZXIiLCJhbnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQVNBLElBQU1BLFFBQXdDLEdBQUcsU0FBM0NBLFFBQTJDLE9BUzNDO0FBQUEsTUFSSkMsYUFRSSxRQVJKQSxhQVFJO0FBQUEsTUFQSkMsT0FPSSxRQVBKQSxPQU9JO0FBQUEsTUFOSkMsYUFNSSxRQU5KQSxhQU1JO0FBQUEsTUFMSkMsT0FLSSxRQUxKQSxPQUtJO0FBQUEsTUFKSkMsS0FJSSxRQUpKQSxLQUlJO0FBQUEsTUFISkMsYUFHSSxRQUhKQSxhQUdJO0FBQUEsTUFGSkMsWUFFSSxRQUZKQSxZQUVJO0FBQUEsTUFEREMsSUFDQzs7QUFDSixNQUFNQyxRQUFRLEdBQUdGLFlBQVksQ0FBQ0YsS0FBRCxDQUFaLEdBQXNCLFFBQXRCLEdBQWlDLHlCQUFRQSxLQUFSLENBQWxEO0FBRUEsTUFBTUssZUFBZSxHQUFHO0FBQ3RCVCxJQUFBQSxhQUFhLEVBQWJBLGFBRHNCO0FBRXRCVSxJQUFBQSxHQUFHLEVBQUVULE9BQU8sQ0FBQyxDQUFELENBRlU7QUFHdEJBLElBQUFBLE9BQU8sRUFBUEEsT0FIc0I7QUFJdEJDLElBQUFBLGFBQWEsRUFBYkEsYUFK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UEU7QUFRbkJuQixFQUFBQSxhQUFhLEVBQUVZLHNCQUFVQyxJQUFWLENBQWVDLFVBUlg7QUFTbkJiLEVBQUFBLFlBQVksRUFBRVcsc0JBQVVDLElBQVYsQ0FBZUM7QUFUVixDQUFyQjtlQVllcEIsUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IG9ialR5cGUgZnJvbSAnLi9vYmpUeXBlJztcbmltcG9ydCBKU09OT2JqZWN0Tm9kZSBmcm9tICcuL0pTT05PYmplY3ROb2RlJztcbmltcG9ydCBKU09OQXJyYXlOb2RlIGZyb20gJy4vSlNPTkFycmF5Tm9kZSc7XG5pbXBvcnQgSlNPTkl0ZXJhYmxlTm9kZSBmcm9tICcuL0pTT05JdGVyYWJsZU5vZGUnO1xuaW1wb3J0IEpTT05WYWx1ZU5vZGUgZnJvbSAnLi9KU09OVmFsdWVOb2RlJztcbmltcG9ydCB7IENpcmN1bGFyUHJvcHNQYXNzZWRUaHJvdWdoSlNPTk5vZGUgfSBmcm9tICcuL3R5cGVzJztcblxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgQ2lyY3VsYXJQcm9wc1Bhc3NlZFRocm91Z2hKU09OTm9kZSB7XG4gIGtleVBhdGg6IChzdHJpbmcgfCBudW1iZXIpW107XG4gIHZhbHVlOiBhbnk7XG4gIGlzQ3VzdG9tTm9kZTogKHZhbHVlOiBhbnkpID0+IGJvb2xlYW47XG59XG5cbmNvbnN0IEpTT05Ob2RlOiBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoe1xuICBnZXRJdGVtU3RyaW5nLFxuICBrZXlQYXRoLFxuICBsYWJlbFJlbmRlcmVyLFxuICBzdHlsaW5nLFxuICB2YWx1ZSxcbiAgdmFsdWVSZW5kZXJlcixcbiAgaXNDdXN0b21Ob2RlLFxuICAuLi5yZXN0XG59KSA9PiB7XG4gIGNvbnN0IG5vZGVUeXBlID0gaXNDdXN0b21Ob2RlKHZhbHVlKSA/ICdDdXN0b20nIDogb2JqVHlwZSh2YWx1ZSk7XG5cbiAgY29uc3Qgc2ltcGxlTm9kZVByb3BzID0ge1xuICAgIGdldEl0ZW1TdHJpbmcsXG4gICAga2V5OiBrZXlQYXRoWzBdLFxuICAgIGtleVBhdGgsXG4gICAgbGFiZWxSZW5kZXJlcixcbiAgICBub2RlVHlwZSxcbiAgICBzdHlsaW5nLFxuICAgIHZhbHVlLFxuICAgIHZhbHVlUmVuZGVyZXIsXG4gIH07XG5cbiAgY29uc3QgbmVzdGVkTm9kZVByb3BzID0ge1xuICAgIC4uLnJlc3QsXG4gICAgLi4uc2ltcGxlTm9kZVByb3BzLFxuICAgIGRhdGE6IHZhbHVlLFxuICAgIGlzQ3VzdG9tTm9kZSxcbiAgfTtcblxuICBzd2l0Y2ggKG5vZGVUeXBlKSB7XG4gICAgY2FzZSAnT2JqZWN0JzpcbiAgICBjYXNlICdFcnJvcic6XG4gICAgY2FzZSAnV2Vha01hcCc6XG4gICAgY2FzZSAnV2Vha1NldCc6XG4gICAgICByZXR1cm4gPEpTT05PYmplY3ROb2RlIHsuLi5uZXN0ZWROb2RlUHJvcHN9IC8+O1xuICAgIGNhc2UgJ0FycmF5JzpcbiAgICAgIHJldHVybiA8SlNPTkFycmF5Tm9kZSB7Li4ubmVzdGVkTm9kZVByb3BzfSAvPjtcbiAgICBjYXNlICdJdGVyYWJsZSc6XG4gICAgY2FzZSAnTWFwJzpcbiAgICBjYXNlICdTZXQnOlxuICAgICAgcmV0dXJuIDxKU09OSXRlcmFibGVOb2RlIHsuLi5uZXN0ZWROb2RlUHJvcHN9IC8+O1xuICAgIGNhc2UgJ1N0cmluZyc6XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8SlNPTlZhbHVlTm9kZVxuICAgICAgICAgIHsuLi5zaW1wbGVOb2RlUHJvcHN9XG4gICAgICAgICAgdmFsdWVHZXR0ZXI9eyhyYXc6IHN0cmluZykgPT4gYFwiJHtyYXd9XCJgfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICBjYXNlICdOdW1iZXInOlxuICAgICAgcmV0dXJuIDxKU09OVmFsdWVOb2RlIHsuLi5zaW1wbGVOb2RlUHJvcHN9IC8+O1xuICAgIGNhc2UgJ0Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEpTT05WYWx1ZU5vZGVcbiAgICAgICAgICB7Li4uc2ltcGxlTm9kZVByb3BzfVxuICAgICAgICAgIHZhbHVlR2V0dGVyPXsocmF3KSA9PiAocmF3ID8gJ3RydWUnIDogJ2ZhbHNlJyl9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIGNhc2UgJ0RhdGUnOlxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEpTT05WYWx1ZU5vZGVcbiAgICAgICAgICB7Li4uc2ltcGxlTm9kZVByb3BzfVxuICAgICAgICAgIHZhbHVlR2V0dGVyPXsocmF3KSA9PiByYXcudG9JU09TdHJpbmcoKX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgY2FzZSAnTnVsbCc6XG4gICAgICByZXR1cm4gPEpTT05WYWx1ZU5vZGUgey4uLnNpbXBsZU5vZGVQcm9wc30gdmFsdWVHZXR0ZXI9eygpID0+ICdudWxsJ30gLz47XG4gICAgY2FzZSAnVW5kZWZpbmVkJzpcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxKU09OVmFsdWVOb2RlIHsuLi5zaW1wbGVOb2RlUHJvcHN9IHZhbHVlR2V0dGVyPXsoKSA9PiAndW5kZWZpbmVkJ30gLz5cbiAgICAgICk7XG4gICAgY2FzZSAnRnVuY3Rpb24nOlxuICAgIGNhc2UgJ1N5bWJvbCc6XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8SlNPTlZhbHVlTm9kZVxuICAgICAgICAgIHsuLi5zaW1wbGVOb2RlUHJvcHN9XG4gICAgICAgICAgdmFsdWVHZXR0ZXI9eyhyYXcpID0+IHJhdy50b1N0cmluZygpfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICBjYXNlICdDdXN0b20nOlxuICAgICAgcmV0dXJuIDxKU09OVmFsdWVOb2RlIHsuLi5zaW1wbGVOb2RlUHJvcHN9IC8+O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8SlNPTlZhbHVlTm9kZVxuICAgICAgICAgIHsuLi5zaW1wbGVOb2RlUHJvcHN9XG4gICAgICAgICAgdmFsdWVHZXR0ZXI9eygpID0+IGA8JHtub2RlVHlwZX0+YH1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gIH1cbn07XG5cbkpTT05Ob2RlLnByb3BUeXBlcyA9IHtcbiAgZ2V0SXRlbVN0cmluZzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAga2V5UGF0aDogUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLmlzUmVxdWlyZWRcbiAgKS5pc1JlcXVpcmVkLFxuICBsYWJlbFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBzdHlsaW5nOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB2YWx1ZTogUHJvcFR5cGVzLmFueSxcbiAgdmFsdWVSZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNDdXN0b21Ob2RlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgSlNPTk5vZGU7XG4iXX0=