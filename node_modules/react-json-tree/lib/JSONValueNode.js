"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var JSONValueNode = function JSONValueNode(_ref) {
  var nodeType = _ref.nodeType,
      styling = _ref.styling,
      labelRenderer = _ref.labelRenderer,
      keyPath = _ref.keyPath,
      valueRenderer = _ref.valueRenderer,
      value = _ref.value,
      _ref$valueGetter = _ref.valueGetter,
      valueGetter = _ref$valueGetter === void 0 ? function (value) {
    return value;
  } : _ref$valueGetter;
  return /*#__PURE__*/_react["default"].createElement("li", styling('value', nodeType, keyPath), /*#__PURE__*/_react["default"].createElement("label", styling(['label', 'valueLabel'], nodeType, keyPath), labelRenderer(keyPath, nodeType, false, false)), /*#__PURE__*/_react["default"].createElement("span", styling('valueText', nodeType, keyPath), valueRenderer.apply(void 0, [valueGetter(value), value].concat(_toConsumableArray(keyPath)))));
};

JSONValueNode.propTypes = {
  nodeType: _propTypes["default"].string.isRequired,
  styling: _propTypes["default"].func.isRequired,
  labelRenderer: _propTypes["default"].func.isRequired,
  keyPath: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]).isRequired).isRequired,
  valueRenderer: _propTypes["default"].func.isRequired,
  value: _propTypes["default"].any,
  valueGetter: _propTypes["default"].func
};
var _default = JSONValueNode;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9KU09OVmFsdWVOb2RlLnRzeCJdLCJuYW1lcyI6WyJKU09OVmFsdWVOb2RlIiwibm9kZVR5cGUiLCJzdHlsaW5nIiwibGFiZWxSZW5kZXJlciIsImtleVBhdGgiLCJ2YWx1ZVJlbmRlcmVyIiwidmFsdWUiLCJ2YWx1ZUdldHRlciIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJmdW5jIiwiYXJyYXlPZiIsIm9uZU9mVHlwZSIsIm51bWJlciIsImFueSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBYUEsSUFBTUEsYUFBNkMsR0FBRyxTQUFoREEsYUFBZ0Q7QUFBQSxNQUNwREMsUUFEb0QsUUFDcERBLFFBRG9EO0FBQUEsTUFFcERDLE9BRm9ELFFBRXBEQSxPQUZvRDtBQUFBLE1BR3BEQyxhQUhvRCxRQUdwREEsYUFIb0Q7QUFBQSxNQUlwREMsT0FKb0QsUUFJcERBLE9BSm9EO0FBQUEsTUFLcERDLGFBTG9ELFFBS3BEQSxhQUxvRDtBQUFBLE1BTXBEQyxLQU5vRCxRQU1wREEsS0FOb0Q7QUFBQSw4QkFPcERDLFdBUG9EO0FBQUEsTUFPcERBLFdBUG9ELGlDQU90QyxVQUFDRCxLQUFEO0FBQUEsV0FBV0EsS0FBWDtBQUFBLEdBUHNDO0FBQUEsc0JBU3BELHNDQUFRSixPQUFPLENBQUMsT0FBRCxFQUFVRCxRQUFWLEVBQW9CRyxPQUFwQixDQUFmLGVBQ0UseUNBQVdGLE9BQU8sQ0FBQyxDQUFDLE9BQUQsRUFBVSxZQUFWLENBQUQsRUFBMEJELFFBQTFCLEVBQW9DRyxPQUFwQyxDQUFsQixFQUNHRCxhQUFhLENBQUNDLE9BQUQsRUFBVUgsUUFBVixFQUFvQixLQUFwQixFQUEyQixLQUEzQixDQURoQixDQURGLGVBSUUsd0NBQVVDLE9BQU8sQ0FBQyxXQUFELEVBQWNELFFBQWQsRUFBd0JHLE9BQXhCLENBQWpCLEVBQ0dDLGFBQWEsTUFBYixVQUFjRSxXQUFXLENBQUNELEtBQUQsQ0FBekIsRUFBa0NBLEtBQWxDLDRCQUE0Q0YsT0FBNUMsR0FESCxDQUpGLENBVG9EO0FBQUEsQ0FBdEQ7O0FBbUJBSixhQUFhLENBQUNRLFNBQWQsR0FBMEI7QUFDeEJQLEVBQUFBLFFBQVEsRUFBRVEsc0JBQVVDLE1BQVYsQ0FBaUJDLFVBREg7QUFFeEJULEVBQUFBLE9BQU8sRUFBRU8sc0JBQVVHLElBQVYsQ0FBZUQsVUFGQTtBQUd4QlIsRUFBQUEsYUFBYSxFQUFFTSxzQkFBVUcsSUFBVixDQUFlRCxVQUhOO0FBSXhCUCxFQUFBQSxPQUFPLEVBQUVLLHNCQUFVSSxPQUFWLENBQ1BKLHNCQUFVSyxTQUFWLENBQW9CLENBQUNMLHNCQUFVQyxNQUFYLEVBQW1CRCxzQkFBVU0sTUFBN0IsQ0FBcEIsRUFBMERKLFVBRG5ELEVBRVBBLFVBTnNCO0FBT3hCTixFQUFBQSxhQUFhLEVBQUVJLHNCQUFVRyxJQUFWLENBQWVELFVBUE47QUFReEJMLEVBQUFBLEtBQUssRUFBRUcsc0JBQVVPLEdBUk87QUFTeEJULEVBQUFBLFdBQVcsRUFBRUUsc0JBQVVHO0FBVEMsQ0FBMUI7ZUFZZVosYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgSlNPTlZhbHVlTm9kZUNpcmN1bGFyUHJvcHNQcm92aWRlZEJ5SlNPTk5vZGUgfSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBSZW5kZXJzIHNpbXBsZSB2YWx1ZXMgKGVnLiBzdHJpbmdzLCBudW1iZXJzLCBib29sZWFucywgZXRjKVxuICovXG5cbmludGVyZmFjZSBQcm9wcyBleHRlbmRzIEpTT05WYWx1ZU5vZGVDaXJjdWxhclByb3BzUHJvdmlkZWRCeUpTT05Ob2RlIHtcbiAgbm9kZVR5cGU6IHN0cmluZztcbiAgdmFsdWU6IGFueTtcbiAgdmFsdWVHZXR0ZXI/OiAodmFsdWU6IGFueSkgPT4gYW55O1xufVxuXG5jb25zdCBKU09OVmFsdWVOb2RlOiBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoe1xuICBub2RlVHlwZSxcbiAgc3R5bGluZyxcbiAgbGFiZWxSZW5kZXJlcixcbiAga2V5UGF0aCxcbiAgdmFsdWVSZW5kZXJlcixcbiAgdmFsdWUsXG4gIHZhbHVlR2V0dGVyID0gKHZhbHVlKSA9PiB2YWx1ZSxcbn0pID0+IChcbiAgPGxpIHsuLi5zdHlsaW5nKCd2YWx1ZScsIG5vZGVUeXBlLCBrZXlQYXRoKX0+XG4gICAgPGxhYmVsIHsuLi5zdHlsaW5nKFsnbGFiZWwnLCAndmFsdWVMYWJlbCddLCBub2RlVHlwZSwga2V5UGF0aCl9PlxuICAgICAge2xhYmVsUmVuZGVyZXIoa2V5UGF0aCwgbm9kZVR5cGUsIGZhbHNlLCBmYWxzZSl9XG4gICAgPC9sYWJlbD5cbiAgICA8c3BhbiB7Li4uc3R5bGluZygndmFsdWVUZXh0Jywgbm9kZVR5cGUsIGtleVBhdGgpfT5cbiAgICAgIHt2YWx1ZVJlbmRlcmVyKHZhbHVlR2V0dGVyKHZhbHVlKSwgdmFsdWUsIC4uLmtleVBhdGgpfVxuICAgIDwvc3Bhbj5cbiAgPC9saT5cbik7XG5cbkpTT05WYWx1ZU5vZGUucHJvcFR5cGVzID0ge1xuICBub2RlVHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBzdHlsaW5nOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBsYWJlbFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBrZXlQYXRoOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSkuaXNSZXF1aXJlZFxuICApLmlzUmVxdWlyZWQsXG4gIHZhbHVlUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHZhbHVlOiBQcm9wVHlwZXMuYW55LFxuICB2YWx1ZUdldHRlcjogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBKU09OVmFsdWVOb2RlO1xuIl19